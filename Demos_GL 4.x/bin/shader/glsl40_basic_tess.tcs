// Tessellation Control Shader
//
// Neste estágio é definido o número de subdivisões para cada aresta e para o centro do Quad.
// Lembrete: o Tessellation Control Shader é executado para cada vértice do Patch. Isto faz com que
// o gl_TessLevelOuter e o gl_TessLevelInner sejam setados 4 vezes por Patch (nosso patch possui
// 4 vértices). É possível utilizar o gl_InvocationID (id único para cada vértice do patch) para modificar
// essas variáveis apenas uma vez por Patch.
//
// Após este estágio a GPU irá gerar novos vértices que seram alimentados para o Tessellation
// Evaluation Shader.
//
// Abril 2016 - Alex Frasson - afrasson@inf.ufsm.br

#version 400

layout(vertices = 4) out;

uniform vec2 Inner;
uniform vec4 Outer;

#define ID gl_InvocationID

void main()
{
	// Precisamos passar adiante todos os vértices do Patch
	gl_out[ID].gl_Position = gl_in[ID].gl_Position;

	// Vamos modificar o inner e outer apenas para o primeiro vértice do Patch
	if (gl_InvocationID == 0)
	{
		gl_TessLevelOuter[0] = float(Outer[0]);
		gl_TessLevelOuter[1] = float(Outer[1]);
		gl_TessLevelOuter[2] = float(Outer[2]);
		gl_TessLevelOuter[3] = float(Outer[3]);
		gl_TessLevelInner[0] = float(Inner[0]);
		gl_TessLevelInner[1] = float(Inner[1]);
	}
}