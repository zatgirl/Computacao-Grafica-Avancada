// Tessellation Control Shader
//
// Este estágio tem acesso a todos os vértices do Patch. Eles serão então utilizados para
// calcular a posição do novo vértice gerado pela GPU através de uma interpolação linear.
//
// Abril 2016 - Alex Frasson - afrasson@inf.ufsm.br

#version 400

layout(quads, equal_spacing, cw) in;

uniform mat4 MVP;

void main()
{
	// Coordenadas geradas pela GPU
	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;

	// Vértices do nosso Patch
	vec4 p0 = gl_in[0].gl_Position;
	vec4 p1 = gl_in[1].gl_Position;
	vec4 p2 = gl_in[2].gl_Position;
	vec4 p3 = gl_in[3].gl_Position;

	// Linear interpolation
	gl_Position =
	p0 * (1-u) * (1-v) +
	p1 * u * (1-v) +
	p3 * v * (1-u) +
	p2 * u * v;

	// Transform to clip coordinates
	gl_Position = MVP * gl_Position;
}